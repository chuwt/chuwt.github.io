<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chuwt&#39;s blog</title>
    <link>https://chuwt.github.io/</link>
    <description>Recent content on chuwt&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 02 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://chuwt.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于我</title>
      <link>https://chuwt.github.io/about/</link>
      <pubDate>Fri, 20 Aug 2021 21:38:52 +0800</pubDate>
      
      <guid>https://chuwt.github.io/about/</guid>
      <description>I&amp;rsquo;m Chuwt, focusing on Blockchain and Backend. Good at Go and Python. Contributor of Ethereum, Bee and Chia. Now working for Flexpool (Thanks for Alex). Loving OpenSource and life. Visiting my Github. Contacting me by weitaochu@gmail.com.</description>
    </item>
    
    <item>
      <title>圈子</title>
      <link>https://chuwt.github.io/melon/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://chuwt.github.io/melon/</guid>
      <description>不定时分享互联网趣事，丰富摸鱼生活 V2EX[开撕] 现在在 github 开源项目上不回答别人的问题，都是错了么？并且还是错的很严重的那种么？ V2EX关于青</description>
    </item>
    
    <item>
      <title>Multicall使用和原理</title>
      <link>https://chuwt.github.io/post/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B/</guid>
      <description>前言 公司的小伙伴在做一些数据分析的时候用到了multicall，于是就研究了一下，分享一下multicall的使用和原理 开始之前需要知道的关</description>
    </item>
    
    <item>
      <title>EVM运行原理</title>
      <link>https://chuwt.github.io/post/evm%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/evm%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%90%86/</guid>
      <description>ETH-EVM理解 前言 EVM是以太坊虚拟机，其中EVMIterpreter是运行合约代码的解释器，下面我们通过一个合约来具体分析EVM是如何</description>
    </item>
    
    <item>
      <title>Go基于栈和基于寄存器的函数调用栈比较</title>
      <link>https://chuwt.github.io/post/go%E5%9F%BA%E4%BA%8E%E6%A0%88%E5%92%8C%E5%9F%BA%E4%BA%8E%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%BA%A6%E5%AE%9A%E6%AF%94%E8%BE%83/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/go%E5%9F%BA%E4%BA%8E%E6%A0%88%E5%92%8C%E5%9F%BA%E4%BA%8E%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%BA%A6%E5%AE%9A%E6%AF%94%E8%BE%83/</guid>
      <description>开始之前 随着go1.17的发布，go的函数调用约定从之前的基于栈的形式改为了基于寄存器的形式:查看更新日志 所以来对比一下1.16和1.17中</description>
    </item>
    
    <item>
      <title>用爱发电</title>
      <link>https://chuwt.github.io/post/%E7%94%A8%E7%88%B1%E5%8F%91%E7%94%B5/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/%E7%94%A8%E7%88%B1%E5%8F%91%E7%94%B5/</guid>
      <description>前言 前段时间朋友矿池想接入Chia，然后联系我帮忙接入下Chia的挖矿（当时是SOLO模式）。 一开始也对POC一脸蒙蔽，毕竟没 怎么接触过，所</description>
    </item>
    
    <item>
      <title>ETH函数调用图</title>
      <link>https://chuwt.github.io/post/eth%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%9B%BE/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/eth%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%9B%BE/</guid>
      <description>画了一个简单的ETH函数调用图，很多细节没画😂，红色表示存在细节没画的地方，凑合看看</description>
    </item>
    
    <item>
      <title>NIO-netpoll源码分析</title>
      <link>https://chuwt.github.io/post/nio-netpoll%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/nio-netpoll%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>开始之前 上一篇我们讲了一个evio，这节我们来看一看字节跳动开源的高性能nio库，netpoll 由于使用mac，所以下面的分析主要以Kque</description>
    </item>
    
    <item>
      <title>NIO-evio源码分析</title>
      <link>https://chuwt.github.io/post/nio-evio%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/nio-evio%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>开始之前 evio是一个小巧的golang实现的NIO包，阅读源码的实现可以更好的帮助我们学习和了解NIO 由于使用mac，所以下面的分析主要以</description>
    </item>
    
    <item>
      <title>NIO-Kqueue</title>
      <link>https://chuwt.github.io/post/nio-kqueue/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chuwt.github.io/post/nio-kqueue/</guid>
      <description>关键字 Kqueue Kevent Kevent_t Kqueue 创建一个kqueue监听队列，返回的是kq的文件描述符 1 kq, err := syscall.Kqueue() Kevent 监听方法，kq监听changes里注册的事件，将触发的事件放</description>
    </item>
    
  </channel>
</rss>
